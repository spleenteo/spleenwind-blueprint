---
/** ORIGINAL STUFF
 // import BlogList from '~/components/blog/BlogList.astro'; // o il componente che usi per la lista
 // import Pagination from '~/components/common/Pagination.astro';
 * 
 const currentPage = 1; // o ricavalo dai params se gestisci paginazione
 const perPage = 10; // numero di post per pagina
 // const url = getCanonical(getPermalink(post.permalink, 'post'));
 // const image = (await findImage(post.image)) as ImageMetadata | string | undefined;
 const { post } = Astro.props as Props;
 */


import type { GetStaticPaths } from 'astro';

import { query } from './_graphql';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { getStaticPathsBlogPost, blogPostRobots } from '~/utils/blog';

import Layout from '~/layouts/PageLayout.astro';

export const prerender = true;

const { allPages, _allPagesMeta } = await executeQuery(Astro, query, {});

const posts = allPages; // rinomina per chiarezza
const totalEntries = _allPagesMeta.count;


export const getStaticPaths = (async () => {
  return await getStaticPathsBlogPost();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
---

<Layout>
   <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
      {posts.map((post) => (
        <article class="bg-white rounded-lg shadow-md overflow-hidden">
          <div class="p-6">
            <h2 class="text-xl font-semibold mb-3">
              <a href={getPermalink(post.slug, 'post')} class="hover:text-blue-600">
                {post.title}
              </a>
            </h2>
            <time class="text-sm text-gray-500">
              {new Date(post._publishedAt).toLocaleDateString('it-IT')}
            </time>
          </div>
        </article>
      ))}
    </div>
  <ToBlogLink />
  <RelatedPosts post={post} />
</Layout>
